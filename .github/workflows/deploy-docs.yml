name: Deploy Documentation

on:
  push:
    branches:
      - main  # Set branch to deploy from
    paths:
      - 'docs/**'  # Only run workflow when docs directory changes
      - '.github/workflows/deploy-docs.yml'  # Or when this workflow file changes
  
  # For new release tag events
  repository_dispatch:
    types: [update-docs]
    
  # Allow manual triggers from GitHub UI
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to update documentation for (leave empty for latest)'
        required: false

# Sets permissions of the GITHUB_TOKEN
permissions:
  contents: write  # Changed from 'read' to 'write' to allow commits
  pages: write
  id-token: write

# Allow only one concurrent deployment to avoid conflicts
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for proper deployment

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies for search indexer
        run: |
          npm install --location=global lunr@2.3.9
          npm install --location=global cheerio@1.0.0-rc.12
          
      - name: Make scripts executable
        run: |
          chmod +x ./scripts/generate_version_docs.sh
          chmod +x ./scripts/check_links.sh
          chmod +x ./scripts/generate_versioned_search_indexes.sh
      
      - name: Generate version documentation
        if: github.event_name == 'repository_dispatch'
        run: |
          chmod +x ./scripts/generate_version_docs.sh
          ./scripts/generate_version_docs.sh ${{ github.event.client_payload.version }} ${{ github.event.client_payload.tag }}
      
      - name: Generate documentation for manual version
        if: github.event_name == 'workflow_dispatch' && inputs.version != ''
        run: |
          chmod +x ./scripts/generate_version_docs.sh
          ./scripts/generate_version_docs.sh ${{ github.event.inputs.version }} v${{ github.event.inputs.version }}
      
      - name: Generate search indexes
        run: |
          mkdir -p docs/assets
          # Generate main search index
          node scripts/generate_search_index.js
          
          # Generate versioned search indexes if versions exist
          if [ -d "docs/versions" ]; then
            ./scripts/generate_versioned_search_indexes.sh
          fi
          
      - name: Check for broken links
        run: |
          echo "Checking for broken links in documentation..."
          ./scripts/check_links.sh || echo "Warning: Broken links found. Please fix them."

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: docs  # The folder containing the content to deploy
          branch: gh-pages  # The branch to deploy to
          clean: true  # Clean the deployment branch of files not in the source folder
